{
  "articles": [
    {
      "path": "agenda.html",
      "title": "Sobre o minicurso",
      "description": "Vamos nos organizar?",
      "author": [],
      "contents": "\r\nAgenda e Programação\r\nDia 10 - terça-feira - 14h às 16h\r\nIntrodução ao R (instalação, quando usar e características da linguagem)\r\nDia 13 - sexta-feira - 14h às 16h\r\nPacotes do Tidyverse para manipulação de dados\r\nDia 17 - terça-feira - 14h às 16h\r\nVisualização de dados com GGPLOT2\r\nDia 20 - sexta-feira - 14h às 16h\r\nRmarkdown e automação de relatórios\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2022-02-17T15:33:16-03:00"
    },
    {
      "path": "index.html",
      "title": "Introdução à Análise de Dados",
      "description": "Primeiros passos com o R\n",
      "author": [],
      "contents": "\r\n\r\nOficina realizada pelo Grupo de Pesquisa GPPDEO e Programa de Pós-Graduação em Propriedade Intelectual e Transferência de Tecnologia para a Inovação da Universidade Federal do Maranhão com o objetivo de estimular a análise de dados nas pesquisas e atividades de trabalho.\r\n\r\n\r\nbody {\r\n\r\n  text-align: justify;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2022-02-17T15:33:18-03:00"
    },
    {
      "path": "primeiro_encontro.html",
      "title": "Acesso ao R e ao Rstudio Cloud",
      "description": "Início da jornada",
      "author": [],
      "contents": "\r\nMotivação\r\nPor que aprender a usar o R?\r\nA linguagem R é uma das principais ferramentas do mercado para análise de dados e pode ser utilizada em todo o ciclo de análise: coleta, tratamento, processamento, modelagem e comunicação de resultados.\r\nBastante utilizada na área acadêmica e no mercado, conta com quase 18 mil pacotes desenvolvidos pela comunidade de usuários que ampliam consideravelmente sua funcionalidade.\r\nVocê pode criar sites com R (como este que estamos usando), slides, artigos, livros e rapidamente realizar análises estatísticas e as mais variadas visualizações de dados, além da possibilidade de trabalhar com machine learning com os pacotes caret e tidymodels.\r\nAlgumas outras vantagens:\r\nÉ gratuita;\r\nTem uma ativa comunidade de desenvolvedores e usuários no mercado e na academia;\r\nDispõe de muitos tutoriais e dicas.\r\nPossibilita a automatização de relatórios e rotinas, dentre outras vantagens.\r\nSão vantagens, portanto, que ferramentas pagas não apresentam. A flexibilidade e riqueza da linguagem tem um trade off: aprender a linguagem.\r\nEntão, vamos lá?\r\n\r\nAcesso ao material\r\nRstudio Cloud\r\nO primeiro passo da nossa atividade é o acesso ao material do curso e aos recursos do R.\r\nA maneira mais prática de começar é por meio do Rstudio Cloud, onde você terá acesso a todo o material como se estivesse no seu computador.\r\nVejam aqui o tutorial para acesso ao Rstudio Cloud e primeiros passos.\r\nPara as atividades da oficina, acessem o espaço de trabalho compartilhado do RStudio Cloud aqui.\r\nSe a página acima ainda não estiver disponível, acesse por esse.\r\nInstalação local (no seu computador)\r\nVocê também pode fazer a instação no seu computador do R e do Rstudio.\r\nO R pode ser baixado nesse link: https://cran.r-project.org/bin/windows/base/R-4.1.0-win.exe\r\nDurante a instalação, caso apareça a opção de adicionar variável de ambiente ao path, marque a opção.\r\nEm seguida, baixe e instale o Rstudio no seu computador: https://www.rstudio.com/products/rstudio/download/#download\r\nO Rstudio é a interface (IDE) para acessar os recursos do R.\r\nQual a forma mais fácil?\r\nSugiro que usem o Rstudio Cloud até estarem confortáveis antes da utilização da máquina local, até porque os recursos na cloud não dependem das condições do computador que estiver em uso (memória e outros possíveis aspectos técnicos).\r\n\r\n\r\n\r\nO código  usado no encontro pode ser baixado aqui.\r\nJá o vídeo  pode ser acessado aqui.\r\n\r\n\r\nbody {\r\n\r\n  text-align: justify;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2022-02-17T15:33:21-03:00"
    },
    {
      "path": "quarto_encontro.html",
      "title": "Trabalhando com Rmarkdown",
      "description": "Comunicação e reprodutibilidade de pesquisas e análises",
      "author": [],
      "contents": "\r\nO R Markdown é uma linguagem de marcação que suporta variados tipos de saídas de documentos estáticos ou dinâmicos como HTML, PDF, MS Word, Beamer, HTML5, além dos mais variados formatos como slides, livros, sites, dashboards, aplicativos shiny, escrita de artigos científicos etc. Ou seja, é uma ótima ferramenta para documentar a análise e comunicar os respectivos resultados.\r\nPodemos destacar duas obras de referência para trabalhar com o R Markdown: R Markdown: The Definitive Guidee o R Markdown Cookbook. Há também um guia rápido para consultar os principais comandos, que vamos utilizar.\r\nVamos trabalhar, em nosso exemplo, com os modelos de artigos científicos disponibilizados pelo pacote rticles.\r\nMaterial da sessão\r\n\r\n\r\n\r\nO código  usado no encontro pode ser acessado junto com o material do minicurso no Rstudio Cloud, como nos encontros anteriores.\r\nJá o vídeo  do encontro pode ser acessado aqui e o chat aqui.\r\n\r\n\r\n\r\n",
      "last_modified": "2022-02-17T15:33:25-03:00"
    },
    {
      "path": "segundo_encontro.html",
      "title": "Manipulação de dados com Dplyr",
      "description": "Início da jornada",
      "author": [],
      "contents": "\r\nManipulação de dados\r\nNeste encontro vamos começar a aprender, com o pacote dplyr, a manipular dados em um dataset antes de qualquer modelagem ou análise.\r\nVamos conhecer como selecionar colunas, filtrar linhas em um dataset, criar outra variável e ordenar os dados.\r\nNossa referência, claro, é o livro R para Ciência de Dados, do Hadley Wickham, disponível gratuitamente.\r\n\r\nMaterial do 2º Encontro\r\nPara as atividades do encontro, acessem o espaço de trabalho compartilhado do RStudio Cloud aqui, onde o ambiente já está configurado e os arquivos para a prática estão disponíveis.\r\n\r\n\r\n\r\nO código  usado no encontro pode ser baixado aqui, mas recomendo que acessem o material pelo Rstudio Cloud.\r\nJá o vídeo  do encontro pode ser acessado aqui e o chat aqui.\r\n\r\n\r\nbody {\r\n\r\n  text-align: justify;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2022-02-17T15:33:27-03:00"
    },
    {
      "path": "terceiro_encontro.html",
      "title": "Visualização de dados com ggplot2",
      "description": "Breve apresentação do pacote",
      "author": [],
      "contents": "\r\nO R dispõe de vários pacotes para visualização de dados, mas um dos mais importantes é o ggplot2. Vamos nesse encontro mostrar algumas das possibilidades desse pacote.\r\n\r\n\r\n\r\nO código  usado no encontro pode ser baixado aqui, mas recomendo que acessem o material pelo Rstudio Cloud, como nos encontros anteriores.\r\nJá o vídeo  do encontro pode ser acessado aqui e o chat aqui.\r\nVamos instalar e carregar alguns pacotes\r\n\r\n\r\n#install.packages(\"gapminder\") dataset https://www.gapminder.org/\r\nlibrary(gapminder)\r\nlibrary(ggplot2)\r\nlibrary(tidyverse)\r\n\r\n\r\n\r\nVamos salvar o dataset em um objeto para visualizar no ambiente de trabalho e aproveitar para conferir a estrutura dos dados.\r\n\r\n\r\ngapminder <- gapminder\r\n\r\nstr(gapminder) \r\n\r\n\r\ntibble [1,704 x 6] (S3: tbl_df/tbl/data.frame)\r\n $ country  : Factor w/ 142 levels \"Afghanistan\",..: 1 1 1 1 1 1 1 1 1 1 ...\r\n $ continent: Factor w/ 5 levels \"Africa\",\"Americas\",..: 3 3 3 3 3 3 3 3 3 3 ...\r\n $ year     : int [1:1704] 1952 1957 1962 1967 1972 1977 1982 1987 1992 1997 ...\r\n $ lifeExp  : num [1:1704] 28.8 30.3 32 34 36.1 ...\r\n $ pop      : int [1:1704] 8425333 9240934 10267083 11537966 13079460 14880372 12881816 13867957 16317921 22227415 ...\r\n $ gdpPercap: num [1:1704] 779 821 853 836 740 ...\r\n\r\nhead(gapminder)  # Vamos conferir os primeiros dados também\r\n\r\n\r\n# A tibble: 6 x 6\r\n  country     continent  year lifeExp      pop gdpPercap\r\n  <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\r\n1 Afghanistan Asia       1952    28.8  8425333      779.\r\n2 Afghanistan Asia       1957    30.3  9240934      821.\r\n3 Afghanistan Asia       1962    32.0 10267083      853.\r\n4 Afghanistan Asia       1967    34.0 11537966      836.\r\n5 Afghanistan Asia       1972    36.1 13079460      740.\r\n6 Afghanistan Asia       1977    38.4 14880372      786.\r\n\r\n\r\n\r\n# Podemos utilizar o summary para uma análise geral \r\nsummary(gapminder)\r\n\r\n\r\n        country        continent        year         lifeExp     \r\n Afghanistan:  12   Africa  :624   Min.   :1952   Min.   :23.60  \r\n Albania    :  12   Americas:300   1st Qu.:1966   1st Qu.:48.20  \r\n Algeria    :  12   Asia    :396   Median :1980   Median :60.71  \r\n Angola     :  12   Europe  :360   Mean   :1980   Mean   :59.47  \r\n Argentina  :  12   Oceania : 24   3rd Qu.:1993   3rd Qu.:70.85  \r\n Australia  :  12                  Max.   :2007   Max.   :82.60  \r\n (Other)    :1632                                                \r\n      pop              gdpPercap       \r\n Min.   :6.001e+04   Min.   :   241.2  \r\n 1st Qu.:2.794e+06   1st Qu.:  1202.1  \r\n Median :7.024e+06   Median :  3531.8  \r\n Mean   :2.960e+07   Mean   :  7215.3  \r\n 3rd Qu.:1.959e+07   3rd Qu.:  9325.5  \r\n Max.   :1.319e+09   Max.   :113523.1  \r\n                                       \r\n\r\nA tabela de contingência pode ser utilizada para visualizar a quantidade de países por continente nos anos disponíveis no dataset.\r\n\r\n\r\ntable(gapminder$continent, gapminder$year)\r\n\r\n\r\n          \r\n           1952 1957 1962 1967 1972 1977 1982 1987 1992 1997 2002\r\n  Africa     52   52   52   52   52   52   52   52   52   52   52\r\n  Americas   25   25   25   25   25   25   25   25   25   25   25\r\n  Asia       33   33   33   33   33   33   33   33   33   33   33\r\n  Europe     30   30   30   30   30   30   30   30   30   30   30\r\n  Oceania     2    2    2    2    2    2    2    2    2    2    2\r\n          \r\n           2007\r\n  Africa     52\r\n  Americas   25\r\n  Asia       33\r\n  Europe     30\r\n  Oceania     2\r\n\r\nContudo, a tabela de contingência nem sempre é a melhor opção para visualizar a relação entre variáveis, já que podemos ter um grande número de observações nos dados. Utilizamos os gráficos, então.\r\nVamos plotar um gráfico de barras para visualizar a distribuição de uma variável discreta (contável) do nosso dataset. Nesse caso, a variavel continente.\r\nObservem que no eixo X estão as variáveis plotadas com o estilo default do ggplot2 para gráfico de barras (geom_bar), com a contagem das observações.\r\n\r\n\r\nggplot(gapminder, aes(x=continent)) + geom_bar()  # No ggplot não usamos o pipe\r\n\r\n\r\n\r\n\r\nPodemos melhorar o gráfico acima com a inserção de cores a partir do argumento fill. O argumento fillé utilizado para preencher o gráfico e inserir, automaticamente, uma legenda com o nome das variaveis do eixo X\r\n\r\n\r\nggplot(gapminder, aes(x=continent, fill=continent)) + geom_bar()\r\n\r\n\r\n\r\n\r\nVocê pode também customizar:\r\nas cores padrão (default).\r\nmodificar labels: fonte, tamanho da fonte, inserir textos, títulos, subtítulos e legenda.\r\nmodificar a posicao da legenda ou eliminá-la\r\ncriar uma variavel para plotar.\r\nalterar o eixo das coordenadas de x,y para y,x (coord_flip).\r\nObservem a seguir algumas dessas possibilidades:\r\nAinda com o geom_bar, podemos fazer transformar os dados mapeados em y, fazendo uma divisão por exemplo, acrescentar títulos aos eixos com labs, suprimir a legenda das variáveis, como no exemplo.\r\n\r\n\r\nggplot(gapminder, aes(x=continent, fill=continent)) + \r\n    geom_bar(aes(y=..count../12)) +  \r\n    labs(y=\"Número de países\") + \r\n    guides(fill=\"none\")  # Supressão da legenda, pois está redundante. \r\n\r\n\r\n\r\n\r\nPronto, estamos já a utilizar um dos principais pacotes de visualização de dados!\r\nObserve que o esquema básico de um gráfico com ggplot2 é o seguinte:\r\nggplot(data = <DATA>) + # dados\r\n<GEOM_FUNCTION>(mapping = aes(<MAPPINGS>))# função de geometria dos dados e características de customização estética\r\nOu seja, estamos trabalhando com a gramática dos gráficos!\r\n\r\nGramática dos gráficos?\r\nGramática dos gráficos\r\nO que fizemos na seção acima foi trabalhar com o conceito de gramática dos gráficos, que é basicamente construir os gráficos a partir de camadas.\r\nObserve a figura a seguir e repare que temos a primeira camada que são os dados necessários, definindo quais são as variáveis que serão utilizadas. Com aesthetics (aes), define-se a relação entre as variáveis e observações (eixos X e Y, cores, agrupamentos dos dados etc.). Em seguida define-se a geometria dos dados (geom), ou seja, um gráfico de barras, scaterplot, densidade, histograma, dentre outros, bem como a definição de estatísticas, coordenadas e temas.\r\n\r\nPode-se, com essa flexibilidade, criar os mais variados tipos de gráficos, como se observa na galeria de gráficos do ggplot2.\r\nPodemos destacar algumas das geometrias:\r\nTipo\r\nObjeto Geométrico\r\nDispersão (scatterplot)\r\ngeom_point()\r\nGráfico de bolhas\r\ngeom_point()\r\nGráfico de barras\r\ngeom_col() e geom_bar()\r\nHistograma\r\ngeom_histogram()\r\nBoxplot\r\ngeom_boxplot()\r\nDensidade\r\ngeom_density()\r\nGráfico de linhas\r\ngeom_line()\r\nO ggplot2, desenvolvido pelo Hadley Wickham, tem sua apresentação no livro R for Data Science e na página do pacote. Um ótimo material em português, fonte do quadro com o sumário de funções acima, é o livro Ciência de Dados com R, do IBPAD.\r\nCustomizando gráficos com ggplot2\r\nTodo gráfico é um objeto em R. Então podemos salvá-lo para customizações e usos posteriores:\r\n\r\n\r\nmeu_bar_plot <- last_plot()\r\n\r\n\r\n\r\nAgora podemos testar a alteração das coordenadas do gráfico por meio da função coord.\r\ncoord_flip() altera os eixos X e Y, criando um gráfico com barras horizontais.\r\ncoord_polar() mapeia os eixos (X,Y) para um gráfico com coordenadas do tipo polar, uma alternativa ao gráfico de pizza.\r\n\r\n\r\nmeu_bar_plot + coord_flip()\r\n\r\n\r\n\r\n\r\n\r\n\r\nmeu_bar_plot + coord_polar()\r\n\r\n\r\n\r\n\r\nGráficos de densidade\r\n\r\n\r\nggplot(data=gapminder, aes(x=lifeExp)) + \r\n    geom_density()\r\n\r\n\r\n\r\n\r\n\r\n\r\nggplot(data=gapminder, aes(x=lifeExp)) + \r\n    geom_density(size=1.5, fill=\"blue\", alpha=0.3)\r\n\r\n\r\n\r\n\r\nDiferença por continente\r\nComo temos algumas váriaveis contínuas no dataset como expectativa de vida (lifeExp), população (pop) e renda per capita (gdpPercap) para cada ano (year) e país (country), podemos usar gráficos que trazem um sumário das informações.\r\nNo gráfico abaixo temos um gráfico de densidade (geom_density) que apresenta a expectativa de vida por continente. O parâmetro alphaé utilizado para controlar a transparência das cores.\r\n\r\n\r\nggplot(data=gapminder, aes(x=lifeExp, fill=continent)) +\r\n    geom_density(alpha=0.3)\r\n\r\n\r\n\r\n\r\nVamos agora usar um boxplot:\r\n\r\n\r\nggplot(data=gapminder, aes(x=continent, y=lifeExp, fill=continent))+\r\n   geom_boxplot(outlier.size=2) # Pedimos para que haja uma ênfase nos outliers\r\n\r\n\r\n\r\n\r\nPodemos agora ordenar o resultado, melhorando a apresentação do resultado:\r\n\r\n\r\ngapminder %>% \r\n    mutate(continent = reorder(continent, lifeExp, FUN=median)) %>% # indica-se a ordem para ordenar os gráficos\r\n    ggplot(aes(x=continent, y=lifeExp, fill=continent)) +\r\n    geom_boxplot(outlier.size=2)\r\n\r\n\r\n\r\n\r\nVamos plotar agora um sumário dos dados\r\n\r\n\r\ngapminder %>%\r\n    group_by(continent, year) %>%\r\n    summarise(lifeExp=median(lifeExp)) %>% head()\r\n\r\n\r\n# A tibble: 6 x 3\r\n# Groups:   continent [1]\r\n  continent  year lifeExp\r\n  <fct>     <int>   <dbl>\r\n1 Africa     1952    38.8\r\n2 Africa     1957    40.6\r\n3 Africa     1962    42.6\r\n4 Africa     1967    44.7\r\n5 Africa     1972    47.0\r\n6 Africa     1977    49.3\r\n\r\nA mediana da expectativa de vida plotada acima pode ser visualizada diretamente com o ggplot integrando o dplyre o ggplot2:\r\n\r\n\r\ngapminder %>%\r\n    group_by(continent, year) %>%   # fazemos um agrupamento dos dados\r\n    summarise(lifeExp=median(lifeExp)) %>%  # criamos nova coluna com mediana\r\n    ggplot(aes(x=year, y=lifeExp, color=continent)) +  # dados do gráfico\r\n     geom_line(size=1) +  # gráfico de linhas, indicando a espessura da linha \r\n     geom_point(size=1.5)  # adicionamos pontos e os tamanhos dos pontos\r\n\r\n\r\n\r\n\r\nVamos criar agora um um scaterplot (gráfico de dispersão)\r\nO gráfico que vamos criar agora junta vários pontos do que estamos até o momento:\r\n\r\n\r\ngapminder_subset <- gapminder %>% # salvamos em um objeto um subset dos dados\r\nfilter(year == \"2007\") %>% # filtro e criação de novas variaveis, incluindo um reordenamento nos níveis com fct_relevel\r\nmutate(\r\n  pop2 = pop + 1,\r\n  continent = case_when(\r\n    continent == \"Oceania\" ~ \"Asia\",\r\n    TRUE ~ as.character(continent)\r\n  ) %>% as.factor %>% \r\n    fct_relevel(\"Asia\", \"Americas\", \"Europe\", \"Africa\")\r\n) \r\n\r\n\r\n\r\nAgora vamos usar o dataset acima para criar o gráfico, mas com um grau maior de customização.\r\n\r\n\r\nggplot(data = gapminder_subset, aes(x = gdpPercap, y = lifeExp)) +\r\n  geom_point(aes(size = pop, color = continent)) +\r\n  geom_point(aes(size = pop2), color = \"black\", shape = 21) +\r\n  scale_x_log10(breaks = c(500, 1000, 2000, 4000,\r\n                           8000, 16000, 32000, 64000)) +\r\n  scale_y_continuous(breaks = seq(0, 90, by = 10)) +\r\n  scale_color_manual(values = c(\"#F15772\", \"#7EEB03\",\r\n                                \"#FBE700\", \"#54D5E9\"))  +\r\n  scale_size_continuous(range = c(1, 30)) +\r\n  guides(size = \"none\", color = \"none\") +\r\n  labs(\r\n    x = \"Renda\",\r\n    y = \"Expectativa de Vida\"\r\n  ) +\r\n  theme_minimal()\r\n\r\n\r\n\r\n\r\nAgora podemos fazer uma regressão linear para cada continente\r\n\r\n\r\ngap_anual <- gapminder %>%\r\n    group_by(continent, year) %>%\r\n    summarise(lifeExp=median(lifeExp)) \r\n\r\nggplot(gap_anual, aes(x=year, y=lifeExp, color=continent)) +\r\n    geom_point(size=1.5) +\r\n    geom_smooth(aes(fill=continent), method=\"lm\")\r\n\r\n\r\n\r\n\r\n\r\n\r\nbody {\r\n\r\n  text-align: justify;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2022-02-17T15:33:42-03:00"
    }
  ],
  "collections": []
}
